! KSS settings for C#
Lexer=SCLEX_CPP

[FilePatterns]
*.cs

[Options]
fold=1;Folding is turned on by setting fold=true.
fold.at.else=0;This option enables C++ folding on a \"} else {\" line of an if statement.
fold.comment=0;This option enables folding multi-line comments and explicit fold points when using the C++ lexer.  Explicit fold points allows adding extra folding by placing a //{ comment at the start and a //} at the end of a section that should fold.
fold.compact=1;For HTML, XML, Lua and C++ and similar files, turning this option on leads to blank lines following the end of an element folding with that element.
fold.cpp.comment.explicit=1;Set this property to false to disable folding explicit fold points when fold.comment=true.
fold.cpp.comment.multiline=1;Set this property to false to disable folding multi-line comments when fold.comment=true.
fold.cpp.explicit.anywhere=0;Set this property to true to enable explicit fold points anywhere, not just in line comments.
fold.cpp.explicit.end=;The string to use for explicit fold end points, replacing the standard //}.
fold.cpp.explicit.start=;The string to use for explicit fold start points, replacing the standard //{.
fold.cpp.syntax.based=1;Set this property to false to disable syntax based folding.
fold.preprocessor=0;This option enables folding preprocessor directives when using the C++ lexer.||Includes C#'s explicit #region and #endregion folding directives.
lexer.cpp.allow.dollars=1;Set to false to disallow the '$' character in identifiers with the cpp lexer.
lexer.cpp.hashquoted.strings=0;Set to true to enable highlighting of hash-quoted strings.
lexer.cpp.track.preprocessor=1;Set to true to interpret #if/#else/#endif to grey out code that is not active.
lexer.cpp.triplequoted.strings=0;Set to true to enable highlighting of triple-quoted strings.
lexer.cpp.update.preprocessor=1;Set to true to update preprocessor definitions when #define found.
styling.within.preprocessor=0;For C++ code, determines whether all preprocessor code is styled in the||preprocessor style (false, the default) or only from the initial # to the end||of the command word(true).
word.characters=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_#;To determine the word to select, a search is performed allowing the characters in this set to be included in the word.

! C# Keywords
[Keywords0]
abstract as ascending base bool break by byte case catch char checked
class const continue decimal default delegate descending do double else enum
equals event explicit extern false finally fixed float for foreach from goto group if
implicit in int interface internal into is join lock let long namespace new null
object on operator orderby out override params private protected public
readonly ref return sbyte sealed select short sizeof stackalloc static
string struct switch this throw true try typeof uint ulong
unchecked unsafe ushort using var virtual void volatile where while

! user defined keywords or function calls or similar
[Keywords1]
file

! doc comment keywords, highlighted in style 17
!CPP doxygen
[Keywords2]
a addindex addtogroup anchor arg attention
author b brief bug c class code date def defgroup deprecated dontinclude
e em endcode endhtmlonly endif endlatexonly endlink endverbatim enum example exception
f$ f[ f] file fn hideinitializer htmlinclude htmlonly
if image include ingroup internal invariant interface latexonly li line link
mainpage name namespace nosubgrouping note overload
p page par param param[in] param[out]
post pre ref relates remarks return retval
sa section see showinitializer since skip skipline struct subsection
test throw throws todo typedef union until
var verbatim verbinclude version warning weakgroup $ @ \ & < > # { }

! keywords4 is for preprocessor definitions and will cause inactive code
! to be greyed out. This setting is a space separated list of definitions
! where a definition may be of the form NAME=VALUE or simply NAME.
![Keywords4]
!_MSC_VER SCI_NAMESPACE GTK_MAJOR_VERSION=2

[Styles]
! C++ styles
!Style#=font:,size:,bold,italic,underline,fore:,back:,eolfilled,case:,hide,hotSpot
! <Default>
style32=font:Verdana,size:10
! White space
style0=fore:#808080
! Comment: /* */.
style1=fore:#007F00,font:Comic Sans MS,size:9
! Line Comment: //.
style2=fore:#007F00,font:Comic Sans MS,size:9
! Doc comment: block comments beginning with /** or /*!
style3=fore:#3F703F,font:Comic Sans MS,size:9
! Number
style4=fore:#007F7F
! Keyword
style5=fore:#00007F,bold,hotspot
! Double quoted string
style6=fore:#7F007F
! Single quoted string
style7=fore:#7F007F
! UUIDs (only in IDL)
style8=fore:#804080
! Preprocessor
style9=fore:#7F7F00,hotspot
! Operators
style10=fore:#000000,bold
! Identifiers
style11=
! End of line where string is not closed
style12=fore:#000000,font:Courier New,size:10,back:#E0C0E0,eolfilled
! Verbatim strings for C#
style13=fore:#007F00,font:Courier New,size:10,back:#E0FFE0,eolfilled
! Regular expressions for JavaScript
style14=fore:#3F7F3F,font:Courier New,size:10,back:#E0F0FF,eolfilled
! Doc Comment Line: line comments beginning with /// or //!.
style15=fore:#3F703F,font:Comic Sans MS,size:9
! User Defined Keywords
style16=fore:#B00040
! Comment keyword
style17=fore:#3060A0,font:Comic Sans MS,size:9
! Comment keyword error
style18=fore:#204080,font:Comic Sans MS,size:9
! Raw strings for C++0x
style20=fore:#7F007F,back:#FFF3FF,eolfilled
! Triple-quoted strings for Vala
style21=font:Courier New,size:10,fore:#007F00,back:#E0FFE0,eolfilled
! Hash-quoted strings for Pike
style22=font:Courier New,size:10,fore:#007F00,back:#E7FFD7,eolfilled

! Line Numbers
style33=back:#C0C0C0

! Inactive states are 64 greater than their active counterparts

! Inactive White space
style64=fore:#C0C0C0
! Inactive Comment: /* */.
style65=fore:#90B090,font:Comic Sans MS,size:9
! Inactive Line Comment: //.
style66=fore:#90B090,font:Comic Sans MS,size:9
! Inactive Doc comment: block comments beginning with /** or /*!
style67=fore:#D0D0D0,font:Comic Sans MS,size:9
! Inactive Number
style68=fore:#90B0B0
! Inactive Keyword
style69=fore:#9090B0,bold
! Inactive Double quoted string
style70=fore:#B090B0
! Inactive Single quoted string
style71=fore:#B090B0
! Inactive UUIDs (only in IDL)
style72=fore:#C0C0C0
! Inactive Preprocessor
style73=fore:#B0B090
! Inactive Operators
style74=fore:#B0B0B0,bold
! Inactive Identifiers
style75=fore:#B0B0B0
! Inactive End of line where string is not closed
style76=fore:#000000,font:Courier New,size:10,back:#E0C0E0,eolfilled
! Inactive Verbatim strings for C#
style77=fore:#90B090,font:Courier New,size:10,back:#E0FFE0,eolfilled
! Inactive Regular expressions for JavaScript
style78=fore:#7FAF7F,font:Courier New,size:10,back:#E0F0FF,eolfilled
! Inactive Doc Comment Line: line comments beginning with /// or //!.
style79=fore:#C0C0C0,font:Comic Sans MS,size:9
! Inactive Keywords2
style80=fore:#C0C0C0
! Inactive Comment keyword
style81=fore:#C0C0C0,font:Comic Sans MS,size:9
! Inactive Comment keyword error
style82=fore:#C0C0C0,font:Comic Sans MS,size:9
! Inactive Raw strings for C++0x
style84=fore:#B090B0,back:#FFF3FF,eolfilled
! Inactive Triple-quoted strings for Vala
style85=font:Courier New,size:10,fore:#90B090,back:#E0FFE0,eolfilled
! Inactive Hash-quoted strings for Pike
style86=font:Courier New,size:10,fore:#90B090,back:#E7FFD7,eolfilled
